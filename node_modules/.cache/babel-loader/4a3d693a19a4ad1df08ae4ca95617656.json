{"ast":null,"code":"module.exports = normalizeIdentifier;\n\nfunction normalizeIdentifier(value) {\n  return value // Collapse Markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n  .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no object method is uppercase.\n  .toLowerCase().toUpperCase();\n}","map":{"version":3,"sources":["/home/boshra/personal/markdown-editor/node_modules/micromark/dist/util/normalize-identifier.js"],"names":["module","exports","normalizeIdentifier","value","replace","toLowerCase","toUpperCase"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,mBAAjB;;AAEA,SAASA,mBAAT,CAA6BC,KAA7B,EAAoC;AAClC,SACEA,KAAK,CACH;AADG,GAEFC,OAFH,CAEW,aAFX,EAE0B,GAF1B,EAGE;AAHF,GAIGA,OAJH,CAIW,QAJX,EAIqB,EAJrB,EAKE;AACA;AACA;AACA;AACA;AACA;AAVF,GAWGC,WAXH,GAYGC,WAZH,EADF;AAeD","sourcesContent":["module.exports = normalizeIdentifier\n\nfunction normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no object method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n"]},"metadata":{},"sourceType":"script"}