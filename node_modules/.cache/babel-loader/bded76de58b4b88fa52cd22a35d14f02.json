{"ast":null,"code":"var attention = require('./tokenize/attention');\n\nvar headingAtx = require('./tokenize/heading-atx');\n\nvar autolink = require('./tokenize/autolink');\n\nvar list = require('./tokenize/list');\n\nvar blockQuote = require('./tokenize/block-quote');\n\nvar characterEscape = require('./tokenize/character-escape');\n\nvar characterReference = require('./tokenize/character-reference');\n\nvar codeFenced = require('./tokenize/code-fenced');\n\nvar codeIndented = require('./tokenize/code-indented');\n\nvar codeText = require('./tokenize/code-text');\n\nvar definition = require('./tokenize/definition');\n\nvar hardBreakEscape = require('./tokenize/hard-break-escape');\n\nvar htmlFlow = require('./tokenize/html-flow');\n\nvar htmlText = require('./tokenize/html-text');\n\nvar labelEnd = require('./tokenize/label-end');\n\nvar labelImage = require('./tokenize/label-start-image');\n\nvar labelLink = require('./tokenize/label-start-link');\n\nvar setextUnderline = require('./tokenize/setext-underline');\n\nvar thematicBreak = require('./tokenize/thematic-break');\n\nvar lineEnding = require('./tokenize/line-ending');\n\nvar resolveText = require('./initialize/text').resolver;\n\nexports.document = {\n  42: list,\n  // Asterisk\n  43: list,\n  // Plus sign\n  45: list,\n  // Dash\n  48: list,\n  // 0\n  49: list,\n  // 1\n  50: list,\n  // 2\n  51: list,\n  // 3\n  52: list,\n  // 4\n  53: list,\n  // 5\n  54: list,\n  // 6\n  55: list,\n  // 7\n  56: list,\n  // 8\n  57: list,\n  // 9\n  62: blockQuote // Greater than\n\n};\nexports.contentInitial = {\n  91: definition // Left square bracket\n\n};\nexports.flowInitial = {\n  '-2': codeIndented,\n  // Horizontal tab\n  '-1': codeIndented,\n  // Virtual space\n  32: codeIndented // Space\n\n};\nexports.flow = {\n  35: headingAtx,\n  // Number sign\n  42: thematicBreak,\n  // Asterisk\n  45: [setextUnderline, thematicBreak],\n  // Dash\n  60: htmlFlow,\n  // Less than\n  61: setextUnderline,\n  // Equals to\n  95: thematicBreak,\n  // Underscore\n  96: codeFenced,\n  // Grave accent\n  126: codeFenced // Tilde\n\n};\nexports.string = {\n  38: characterReference,\n  // Ampersand\n  92: characterEscape // Backslash\n\n};\nexports.text = {\n  '-5': lineEnding,\n  // Carriage return\n  '-4': lineEnding,\n  // Line feed\n  '-3': lineEnding,\n  // Carriage return + line feed\n  33: labelImage,\n  // Exclamation mark\n  38: characterReference,\n  // Ampersand\n  42: attention,\n  // Asterisk\n  60: [autolink, htmlText],\n  // Less than\n  91: labelLink,\n  // Left square bracket\n  92: [hardBreakEscape, characterEscape],\n  // Backslash\n  93: labelEnd,\n  // Right square bracket\n  95: attention,\n  // Underscore\n  96: codeText // Grave accent\n\n};\nexports.insideSpan = {\n  null: [attention, resolveText]\n};","map":{"version":3,"sources":["/home/boshra/personal/markdown-editor/node_modules/micromark/dist/constructs.js"],"names":["attention","require","headingAtx","autolink","list","blockQuote","characterEscape","characterReference","codeFenced","codeIndented","codeText","definition","hardBreakEscape","htmlFlow","htmlText","labelEnd","labelImage","labelLink","setextUnderline","thematicBreak","lineEnding","resolveText","resolver","exports","document","contentInitial","flowInitial","flow","string","text","insideSpan","null"],"mappings":"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","sourcesContent":["var attention = require('./tokenize/attention')\nvar headingAtx = require('./tokenize/heading-atx')\nvar autolink = require('./tokenize/autolink')\nvar list = require('./tokenize/list')\nvar blockQuote = require('./tokenize/block-quote')\nvar characterEscape = require('./tokenize/character-escape')\nvar characterReference = require('./tokenize/character-reference')\nvar codeFenced = require('./tokenize/code-fenced')\nvar codeIndented = require('./tokenize/code-indented')\nvar codeText = require('./tokenize/code-text')\nvar definition = require('./tokenize/definition')\nvar hardBreakEscape = require('./tokenize/hard-break-escape')\nvar htmlFlow = require('./tokenize/html-flow')\nvar htmlText = require('./tokenize/html-text')\nvar labelEnd = require('./tokenize/label-end')\nvar labelImage = require('./tokenize/label-start-image')\nvar labelLink = require('./tokenize/label-start-link')\nvar setextUnderline = require('./tokenize/setext-underline')\nvar thematicBreak = require('./tokenize/thematic-break')\nvar lineEnding = require('./tokenize/line-ending')\nvar resolveText = require('./initialize/text').resolver\n\nexports.document = {\n  42: list, // Asterisk\n  43: list, // Plus sign\n  45: list, // Dash\n  48: list, // 0\n  49: list, // 1\n  50: list, // 2\n  51: list, // 3\n  52: list, // 4\n  53: list, // 5\n  54: list, // 6\n  55: list, // 7\n  56: list, // 8\n  57: list, // 9\n  62: blockQuote // Greater than\n}\n\nexports.contentInitial = {\n  91: definition // Left square bracket\n}\n\nexports.flowInitial = {\n  '-2': codeIndented, // Horizontal tab\n  '-1': codeIndented, // Virtual space\n  32: codeIndented // Space\n}\n\nexports.flow = {\n  35: headingAtx, // Number sign\n  42: thematicBreak, // Asterisk\n  45: [setextUnderline, thematicBreak], // Dash\n  60: htmlFlow, // Less than\n  61: setextUnderline, // Equals to\n  95: thematicBreak, // Underscore\n  96: codeFenced, // Grave accent\n  126: codeFenced // Tilde\n}\n\nexports.string = {\n  38: characterReference, // Ampersand\n  92: characterEscape // Backslash\n}\n\nexports.text = {\n  '-5': lineEnding, // Carriage return\n  '-4': lineEnding, // Line feed\n  '-3': lineEnding, // Carriage return + line feed\n  33: labelImage, // Exclamation mark\n  38: characterReference, // Ampersand\n  42: attention, // Asterisk\n  60: [autolink, htmlText], // Less than\n  91: labelLink, // Left square bracket\n  92: [hardBreakEscape, characterEscape], // Backslash\n  93: labelEnd, // Right square bracket\n  95: attention, // Underscore\n  96: codeText // Grave accent\n}\n\nexports.insideSpan = {\n  null: [attention, resolveText]\n}\n"]},"metadata":{},"sourceType":"script"}