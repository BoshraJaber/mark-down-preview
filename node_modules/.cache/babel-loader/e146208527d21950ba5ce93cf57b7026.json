{"ast":null,"code":"module.exports = classifyCharacter;\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space');\n\nvar unicodePunctuation = require('../character/unicode-punctuation');\n\nvar unicodeWhitespace = require('../character/unicode-whitespace'); // Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\n\n\nfunction classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","map":{"version":3,"sources":["/home/boshra/personal/markdown-editor/node_modules/micromark/dist/util/classify-character.js"],"names":["module","exports","classifyCharacter","markdownLineEndingOrSpace","require","unicodePunctuation","unicodeWhitespace","code"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,iBAAjB;;AAEA,IAAIC,yBAAyB,GAAGC,OAAO,CAAC,4CAAD,CAAvC;;AACA,IAAIC,kBAAkB,GAAGD,OAAO,CAAC,kCAAD,CAAhC;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,iCAAD,CAA/B,C,CAEA;AACA;AACA;AACA;;;AACA,SAASF,iBAAT,CAA2BK,IAA3B,EAAiC;AAC/B,MACEA,IAAI,KAAK,IAAT,IACAJ,yBAAyB,CAACI,IAAD,CADzB,IAEAD,iBAAiB,CAACC,IAAD,CAHnB,EAIE;AACA,WAAO,CAAP;AACD;;AAED,MAAIF,kBAAkB,CAACE,IAAD,CAAtB,EAA8B;AAC5B,WAAO,CAAP;AACD;AACF","sourcesContent":["module.exports = classifyCharacter\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space')\nvar unicodePunctuation = require('../character/unicode-punctuation')\nvar unicodeWhitespace = require('../character/unicode-whitespace')\n\n// Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n"]},"metadata":{},"sourceType":"script"}