{"ast":null,"code":"module.exports = sizeChunks; // Measure the number of character codes in chunks.\n// Counts tabs based on their expanded size, and CR+LF as one character.\n\nfunction sizeChunks(chunks) {\n  var index = -1;\n  var size = 0;\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1;\n  }\n\n  return size;\n}","map":{"version":3,"sources":["/home/boshra/personal/markdown-editor/node_modules/micromark/dist/util/size-chunks.js"],"names":["module","exports","sizeChunks","chunks","index","size","length"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,UAAjB,C,CAEA;AACA;;AACA,SAASA,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,IAAI,GAAG,CAAX;;AAEA,SAAO,EAAED,KAAF,GAAUD,MAAM,CAACG,MAAxB,EAAgC;AAC9BD,IAAAA,IAAI,IAAI,OAAOF,MAAM,CAACC,KAAD,CAAb,KAAyB,QAAzB,GAAoCD,MAAM,CAACC,KAAD,CAAN,CAAcE,MAAlD,GAA2D,CAAnE;AACD;;AAED,SAAOD,IAAP;AACD","sourcesContent":["module.exports = sizeChunks\n\n// Measure the number of character codes in chunks.\n// Counts tabs based on their expanded size, and CR+LF as one character.\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n"]},"metadata":{},"sourceType":"script"}