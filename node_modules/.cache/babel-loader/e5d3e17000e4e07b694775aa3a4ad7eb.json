{"ast":null,"code":"module.exports = createSpace;\n\nvar markdownSpace = require('../character/markdown-space');\n\nfunction createSpace(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity;\n  var size;\n  return start;\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      size = 0;\n      return prefix(code);\n    }\n\n    return ok(code);\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n\n    effects.exit(type);\n    return ok(code);\n  }\n}","map":{"version":3,"sources":["/home/boshra/personal/markdown-editor/node_modules/micromark/dist/tokenize/factory-space.js"],"names":["module","exports","createSpace","markdownSpace","require","effects","ok","type","max","limit","Infinity","size","start","code","enter","prefix","consume","exit"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,WAAjB;;AAEA,IAAIC,aAAa,GAAGC,OAAO,CAAC,6BAAD,CAA3B;;AAEA,SAASF,WAAT,CAAqBG,OAArB,EAA8BC,EAA9B,EAAkCC,IAAlC,EAAwCC,GAAxC,EAA6C;AAC3C,MAAIC,KAAK,GAAGD,GAAG,GAAGA,GAAG,GAAG,CAAT,GAAaE,QAA5B;AACA,MAAIC,IAAJ;AAEA,SAAOC,KAAP;;AAEA,WAASA,KAAT,CAAeC,IAAf,EAAqB;AACnB,QAAIV,aAAa,CAACU,IAAD,CAAjB,EAAyB;AACvBR,MAAAA,OAAO,CAACS,KAAR,CAAcP,IAAd;AACAI,MAAAA,IAAI,GAAG,CAAP;AACA,aAAOI,MAAM,CAACF,IAAD,CAAb;AACD;;AAED,WAAOP,EAAE,CAACO,IAAD,CAAT;AACD;;AAED,WAASE,MAAT,CAAgBF,IAAhB,EAAsB;AACpB,QAAIV,aAAa,CAACU,IAAD,CAAb,IAAuBF,IAAI,KAAKF,KAApC,EAA2C;AACzCJ,MAAAA,OAAO,CAACW,OAAR,CAAgBH,IAAhB;AACA,aAAOE,MAAP;AACD;;AAEDV,IAAAA,OAAO,CAACY,IAAR,CAAaV,IAAb;AACA,WAAOD,EAAE,CAACO,IAAD,CAAT;AACD;AACF","sourcesContent":["module.exports = createSpace\n\nvar markdownSpace = require('../character/markdown-space')\n\nfunction createSpace(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size\n\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      size = 0\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}