{"ast":null,"code":"exports.tokenize = tokenizelabelLink;\nexports.resolveAll = require('./label-end').resolveAll;\n\nfunction tokenizelabelLink(effects, ok, nok) {\n  var self = this;\n  return start;\n\n  function start(code) {\n    effects.enter('labelLink');\n    effects.enter('labelMarker');\n    effects.consume(code);\n    effects.exit('labelMarker');\n    effects.exit('labelLink');\n    return after;\n  }\n\n  function after(code) {\n    /* istanbul ignore next - footnotes. */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","map":{"version":3,"sources":["/home/boshra/personal/markdown-editor/node_modules/micromark/dist/tokenize/label-start-link.js"],"names":["exports","tokenize","tokenizelabelLink","resolveAll","require","effects","ok","nok","self","start","code","enter","consume","exit","after","parser","constructs"],"mappings":"AAAAA,OAAO,CAACC,QAAR,GAAmBC,iBAAnB;AACAF,OAAO,CAACG,UAAR,GAAqBC,OAAO,CAAC,aAAD,CAAP,CAAuBD,UAA5C;;AAEA,SAASD,iBAAT,CAA2BG,OAA3B,EAAoCC,EAApC,EAAwCC,GAAxC,EAA6C;AAC3C,MAAIC,IAAI,GAAG,IAAX;AAEA,SAAOC,KAAP;;AAEA,WAASA,KAAT,CAAeC,IAAf,EAAqB;AACnBL,IAAAA,OAAO,CAACM,KAAR,CAAc,WAAd;AACAN,IAAAA,OAAO,CAACM,KAAR,CAAc,aAAd;AACAN,IAAAA,OAAO,CAACO,OAAR,CAAgBF,IAAhB;AACAL,IAAAA,OAAO,CAACQ,IAAR,CAAa,aAAb;AACAR,IAAAA,OAAO,CAACQ,IAAR,CAAa,WAAb;AACA,WAAOC,KAAP;AACD;;AAED,WAASA,KAAT,CAAeJ,IAAf,EAAqB;AACnB;AACA,WAAOA,IAAI,KAAK,EAAT,IAAe,4BAA4BF,IAAI,CAACO,MAAL,CAAYC,UAAvD,GACHT,GAAG,CAACG,IAAD,CADA,GAEHJ,EAAE,CAACI,IAAD,CAFN;AAGD;AACF","sourcesContent":["exports.tokenize = tokenizelabelLink\nexports.resolveAll = require('./label-end').resolveAll\n\nfunction tokenizelabelLink(effects, ok, nok) {\n  var self = this\n\n  return start\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  function after(code) {\n    /* istanbul ignore next - footnotes. */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}