{"ast":null,"code":"'use strict';\n\nmodule.exports = fromMarkdown; // These three are compiled away in the `dist/`\n\nvar decode = require('parse-entities/decode-entity');\n\nvar toString = require('mdast-util-to-string');\n\nvar own = require('micromark/dist/constant/has-own-property');\n\nvar normalizeIdentifier = require('micromark/dist/util/normalize-identifier');\n\nvar safeFromInt = require('micromark/dist/util/safe-from-int');\n\nvar parser = require('micromark/dist/parse');\n\nvar preprocessor = require('micromark/dist/preprocess');\n\nvar postprocess = require('micromark/dist/postprocess');\n\nfunction fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n\n  return compiler(options)(postprocess(parser(options).document().write(preprocessor()(value, encoding, true))));\n} // Note this compiler only understand complete buffering, not streaming.\n\n\nfunction compiler(options) {\n  var settings = options || {};\n  var config = configure({\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: closer(onexitcharacterreferencevalue),\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }, settings.mdastExtensions || []);\n  var data = {};\n  return compile;\n\n  function compile(events) {\n    var stack = [{\n      type: 'root',\n      children: []\n    }];\n    var index = -1;\n    var listStack = [];\n    var length;\n    var handler;\n    var listStart;\n    var event;\n\n    while (++index < events.length) {\n      event = events[index]; // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n\n      if (event[1].type === 'listOrdered' || event[1].type === 'listUnordered') {\n        if (event[0] === 'enter') {\n          listStack.push(index);\n        } else {\n          listStart = listStack.pop(index);\n          index = prepareList(events, listStart, index);\n        }\n      }\n    }\n\n    index = -1;\n    length = events.length;\n\n    while (++index < length) {\n      handler = config[events[index][0]];\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call({\n          stack: stack,\n          config: config,\n          enter: enter,\n          exit: exit,\n          buffer: buffer,\n          resume: resume,\n          sliceSerialize: events[index][2].sliceSerialize,\n          setData: setData,\n          getData: getData\n        }, events[index][1]);\n      }\n    } // Figure out `root` position.\n\n\n    stack[0].position = {\n      start: point(length ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(length ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n    return stack[0];\n  }\n\n  function prepareList(events, start, length) {\n    var index = start - 1;\n    var containerBalance = -1;\n    var listSpread = false;\n    var listItem;\n    var tailIndex;\n    var lineIndex;\n    var tailEvent;\n    var event;\n    var firstBlankLineIndex;\n    var atMarker;\n\n    while (++index <= length) {\n      event = events[index];\n\n      if (event[1].type === 'listUnordered' || event[1].type === 'listOrdered' || event[1].type === 'blockQuote') {\n        if (event[0] === 'enter') {\n          containerBalance++;\n        } else {\n          containerBalance--;\n        }\n\n        atMarker = undefined;\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n            firstBlankLineIndex = index;\n          }\n\n          atMarker = undefined;\n        }\n      } else if (event[1].type === 'linePrefix' || event[1].type === 'listItemValue' || event[1].type === 'listItemMarker' || event[1].type === 'listItemPrefix' || event[1].type === 'listItemPrefixWhitespace') {// Empty.\n      } else {\n        atMarker = undefined;\n      }\n\n      if (!containerBalance && event[0] === 'enter' && event[1].type === 'listItemPrefix' || containerBalance === -1 && event[0] === 'exit' && (event[1].type === 'listUnordered' || event[1].type === 'listOrdered')) {\n        if (listItem) {\n          tailIndex = index;\n          lineIndex = undefined;\n\n          while (tailIndex--) {\n            tailEvent = events[tailIndex];\n\n            if (tailEvent[1].type === 'lineEnding' || tailEvent[1].type === 'lineEndingBlank') {\n              if (tailEvent[0] === 'exit') continue;\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank';\n                listSpread = true;\n              }\n\n              tailEvent[1].type = 'lineEnding';\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === 'linePrefix' || tailEvent[1].type === 'blockQuotePrefix' || tailEvent[1].type === 'blockQuotePrefixWhitespace' || tailEvent[1].type === 'blockQuoteMarker' || tailEvent[1].type === 'listItemIndent') {// Empty\n            } else {\n              break;\n            }\n          }\n\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          } // Fix position.\n\n\n          listItem.end = point(lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        } // Create a new list item.\n\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: point(event[1].start)\n          };\n          events.splice(index, 0, ['enter', listItem, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  function setData(key, value) {\n    data[key] = value;\n  }\n\n  function getData(key) {\n    return data[key];\n  }\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    };\n  }\n\n  function opener(create, and) {\n    return open;\n\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  function enter(node, token) {\n    this.stack[this.stack.length - 1].children.push(node);\n    this.stack.push(node);\n    node.position = {\n      start: point(token.start)\n    };\n    return node;\n  }\n\n  function closer(and) {\n    return close;\n\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  function exit(token) {\n    var node = this.stack.pop();\n    node.position.end = point(token.end);\n    return node;\n  }\n\n  function resume() {\n    var value = toString(this.stack.pop());\n    return value;\n  } //\n  // Handlers.\n  //\n\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true);\n  }\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      this.stack[this.stack.length - 2].start = parseInt(this.sliceSerialize(token), 10);\n      setData('expectingFirstListItemValue');\n    }\n  }\n\n  function onexitcodefencedfenceinfo() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].lang = data;\n  }\n\n  function onexitcodefencedfencemeta() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].meta = data;\n  }\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return;\n    this.buffer();\n    setData('flowCodeInside', true);\n  }\n\n  function onexitcodefenced() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    setData('flowCodeInside');\n  }\n\n  function onexitcodeindented() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].value = data;\n  }\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    var label = this.resume();\n    this.stack[this.stack.length - 1].label = label;\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  function onexitdefinitiontitlestring() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].title = data;\n  }\n\n  function onexitdefinitiondestinationstring() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].url = data;\n  }\n\n  function onexitatxheadingsequence(token) {\n    if (!this.stack[this.stack.length - 1].depth) {\n      this.stack[this.stack.length - 1].depth = this.sliceSerialize(token).length;\n    }\n  }\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true);\n  }\n\n  function onexitsetextheadinglinesequence(token) {\n    this.stack[this.stack.length - 1].depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2;\n  }\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding');\n  }\n\n  function onenterdata(token) {\n    var siblings = this.stack[this.stack.length - 1].children;\n    var tail = siblings[siblings.length - 1];\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start)\n      };\n      this.stack[this.stack.length - 1].children.push(tail);\n    }\n\n    this.stack.push(tail);\n  }\n\n  function onexitdata(token) {\n    var tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  function onexitlineending(token) {\n    var context = this.stack[this.stack.length - 1]; // If we’re at a hard break, include the line ending in there.\n\n    if (getData('atHardBreak')) {\n      context.children[context.children.length - 1].position.end = point(token.end);\n      setData('atHardBreak');\n      return;\n    }\n\n    if (getData('setextHeadingSlurpLineEnding')) {\n      return;\n    }\n\n    if (config.canContainEols.indexOf(context.type) !== -1) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  function onexithardbreak() {\n    setData('atHardBreak', true);\n  }\n\n  function onexithtmlflow() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].value = data;\n  }\n\n  function onexithtmltext() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].value = data;\n  }\n\n  function onexitcodetext() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].value = data;\n  }\n\n  function onexitlink() {\n    var context = this.stack[this.stack.length - 1]; // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference';\n      context.referenceType = getData('referenceType') || 'shortcut';\n      delete context.url;\n      delete context.title;\n    } else {\n      delete context.identifier;\n      delete context.label;\n      delete context.referenceType;\n    }\n\n    setData('referenceType');\n  }\n\n  function onexitimage() {\n    var context = this.stack[this.stack.length - 1]; // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference';\n      context.referenceType = getData('referenceType') || 'shortcut';\n      delete context.url;\n      delete context.title;\n    } else {\n      delete context.identifier;\n      delete context.label;\n      delete context.referenceType;\n    }\n\n    setData('referenceType');\n  }\n\n  function onexitlabeltext(token) {\n    this.stack[this.stack.length - 2].identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  function onexitlabel() {\n    var fragment = this.stack[this.stack.length - 1];\n    var value = this.resume();\n    this.stack[this.stack.length - 1].label = value; // Assume a reference.\n\n    setData('inReference', true);\n\n    if (this.stack[this.stack.length - 1].type === 'link') {\n      this.stack[this.stack.length - 1].children = fragment.children;\n    } else {\n      this.stack[this.stack.length - 1].alt = value;\n    }\n  }\n\n  function onexitresourcedestinationstring() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].url = data;\n  }\n\n  function onexitresourcetitlestring() {\n    var data = this.resume();\n    this.stack[this.stack.length - 1].title = data;\n  }\n\n  function onexitresource() {\n    setData('inReference');\n  }\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed');\n  }\n\n  function onexitreferencestring(token) {\n    var label = this.resume();\n    this.stack[this.stack.length - 1].label = label;\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    setData('referenceType', 'full');\n  }\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type);\n  }\n\n  function onexitcharacterreferencevalue(token) {\n    var data = this.sliceSerialize(token);\n    var type = getData('characterReferenceType');\n    var value;\n\n    if (type) {\n      value = safeFromInt(data, type === 'characterReferenceMarkerNumeric' ? 10 : 16);\n      setData('characterReferenceType');\n    } else {\n      value = decode(data);\n    }\n\n    this.stack[this.stack.length - 1].value += value;\n  }\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    this.stack[this.stack.length - 1].url = this.sliceSerialize(token);\n  }\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    this.stack[this.stack.length - 1].url = 'mailto:' + this.sliceSerialize(token);\n  } //\n  // Creaters.\n  //\n\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  function heading() {\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    };\n  }\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\nfunction configure(config, extensions) {\n  var length = extensions.length;\n  var index = -1;\n\n  while (++index < length) {\n    extension(config, extensions[index]);\n  }\n\n  return config;\n}\n\nfunction extension(config, extension) {\n  var key;\n  var left;\n  var right;\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : config[key] = {};\n    right = extension[key];\n\n    if (key === 'canContainEols') {\n      config[key] = [].concat(left, right);\n    } else {\n      Object.assign(left, right);\n    }\n  }\n}","map":{"version":3,"sources":["/home/boshra/personal/markdown-editor/node_modules/mdast-util-from-markdown/dist/index.js"],"names":["module","exports","fromMarkdown","decode","require","toString","own","normalizeIdentifier","safeFromInt","parser","preprocessor","postprocess","value","encoding","options","undefined","compiler","document","write","settings","config","configure","canContainEols","enter","autolink","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","heading","blockQuote","characterEscape","characterReference","codeFenced","codeFlow","codeFencedFenceInfo","buffer","codeFencedFenceMeta","codeIndented","codeText","codeTextData","data","codeFlowValue","definition","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreakEscape","hardBreak","hardBreakTrailing","htmlFlow","html","htmlFlowData","htmlText","htmlTextData","image","label","listItem","listItemValue","onenterlistitemvalue","listOrdered","list","onenterlistordered","listUnordered","paragraph","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","thematicBreak","exit","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","lineEnding","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","compile","events","stack","type","children","index","listStack","length","handler","listStart","event","push","pop","prepareList","call","resume","sliceSerialize","setData","getData","position","start","point","line","column","offset","end","containerBalance","listSpread","tailIndex","lineIndex","tailEvent","firstBlankLineIndex","atMarker","_spread","splice","key","d","create","and","open","token","node","close","parseInt","lang","meta","replace","identifier","toLowerCase","title","url","depth","charCodeAt","siblings","tail","text","context","indexOf","referenceType","fragment","alt","ordered","spread","checked","extensions","extension","left","right","concat","Object","assign"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = fromMarkdown\n\n// These three are compiled away in the `dist/`\n\nvar decode = require('parse-entities/decode-entity')\nvar toString = require('mdast-util-to-string')\nvar own = require('micromark/dist/constant/has-own-property')\nvar normalizeIdentifier = require('micromark/dist/util/normalize-identifier')\nvar safeFromInt = require('micromark/dist/util/safe-from-int')\nvar parser = require('micromark/dist/parse')\nvar preprocessor = require('micromark/dist/preprocess')\nvar postprocess = require('micromark/dist/postprocess')\n\nfunction fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n\n  return compiler(options)(\n    postprocess(\n      parser(options).document().write(preprocessor()(value, encoding, true))\n    )\n  )\n}\n\n// Note this compiler only understand complete buffering, not streaming.\nfunction compiler(options) {\n  var settings = options || {}\n  var config = configure(\n    {\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: closer(onexitcharacterreferencevalue),\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n\n    settings.mdastExtensions || []\n  )\n\n  var data = {}\n\n  return compile\n\n  function compile(events) {\n    var stack = [{type: 'root', children: []}]\n    var index = -1\n    var listStack = []\n    var length\n    var handler\n    var listStart\n    var event\n\n    while (++index < events.length) {\n      event = events[index]\n\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'listUnordered'\n      ) {\n        if (event[0] === 'enter') {\n          listStack.push(index)\n        } else {\n          listStart = listStack.pop(index)\n          index = prepareList(events, listStart, index)\n        }\n      }\n    }\n\n    index = -1\n    length = events.length\n\n    while (++index < length) {\n      handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          {\n            stack: stack,\n            config: config,\n            enter: enter,\n            exit: exit,\n            buffer: buffer,\n            resume: resume,\n            sliceSerialize: events[index][2].sliceSerialize,\n            setData: setData,\n            getData: getData\n          },\n\n          events[index][1]\n        )\n      }\n    }\n\n    // Figure out `root` position.\n    stack[0].position = {\n      start: point(\n        length ? events[0][1].start : {line: 1, column: 1, offset: 0}\n      ),\n\n      end: point(\n        length\n          ? events[events.length - 2][1].end\n          : {line: 1, column: 1, offset: 0}\n      )\n    }\n\n    return stack[0]\n  }\n\n  function prepareList(events, start, length) {\n    var index = start - 1\n    var containerBalance = -1\n    var listSpread = false\n    var listItem\n    var tailIndex\n    var lineIndex\n    var tailEvent\n    var event\n    var firstBlankLineIndex\n    var atMarker\n\n    while (++index <= length) {\n      event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = point(\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: point(event[1].start)\n          }\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  function getData(key) {\n    return data[key]\n  }\n\n  function point(d) {\n    return {line: d.line, column: d.column, offset: d.offset}\n  }\n\n  function opener(create, and) {\n    return open\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  function buffer() {\n    this.stack.push({type: 'fragment', children: []})\n  }\n\n  function enter(node, token) {\n    this.stack[this.stack.length - 1].children.push(node)\n    this.stack.push(node)\n    node.position = {start: point(token.start)}\n    return node\n  }\n\n  function closer(and) {\n    return close\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  function exit(token) {\n    var node = this.stack.pop()\n    node.position.end = point(token.end)\n    return node\n  }\n\n  function resume() {\n    var value = toString(this.stack.pop())\n    return value\n  }\n\n  //\n  // Handlers.\n  //\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      this.stack[this.stack.length - 2].start = parseInt(\n        this.sliceSerialize(token),\n        10\n      )\n\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  function onexitcodefencedfenceinfo() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].lang = data\n  }\n\n  function onexitcodefencedfencemeta() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].meta = data\n  }\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  function onexitcodefenced() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data.replace(\n      /^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g,\n      ''\n    )\n\n    setData('flowCodeInside')\n  }\n\n  function onexitcodeindented() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    var label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  function onexitdefinitiontitlestring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n\n  function onexitdefinitiondestinationstring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n\n  function onexitatxheadingsequence(token) {\n    if (!this.stack[this.stack.length - 1].depth) {\n      this.stack[this.stack.length - 1].depth = this.sliceSerialize(\n        token\n      ).length\n    }\n  }\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  function onexitsetextheadinglinesequence(token) {\n    this.stack[this.stack.length - 1].depth =\n      this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  function onenterdata(token) {\n    var siblings = this.stack[this.stack.length - 1].children\n    var tail = siblings[siblings.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {start: point(token.start)}\n      this.stack[this.stack.length - 1].children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n\n  function onexitdata(token) {\n    var tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  function onexitlineending(token) {\n    var context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      context.children[context.children.length - 1].position.end = point(\n        token.end\n      )\n\n      setData('atHardBreak')\n      return\n    }\n\n    if (getData('setextHeadingSlurpLineEnding')) {\n      return\n    }\n\n    if (config.canContainEols.indexOf(context.type) !== -1) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  function onexithtmlflow() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexithtmltext() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitcodetext() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitlink() {\n    var context = this.stack[this.stack.length - 1]\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n\n  function onexitimage() {\n    var context = this.stack[this.stack.length - 1]\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n\n  function onexitlabeltext(token) {\n    this.stack[this.stack.length - 2].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  function onexitlabel() {\n    var fragment = this.stack[this.stack.length - 1]\n    var value = this.resume()\n\n    this.stack[this.stack.length - 1].label = value\n\n    // Assume a reference.\n    setData('inReference', true)\n\n    if (this.stack[this.stack.length - 1].type === 'link') {\n      this.stack[this.stack.length - 1].children = fragment.children\n    } else {\n      this.stack[this.stack.length - 1].alt = value\n    }\n  }\n\n  function onexitresourcedestinationstring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n\n  function onexitresourcetitlestring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  function onexitreferencestring(token) {\n    var label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  function onexitcharacterreferencevalue(token) {\n    var data = this.sliceSerialize(token)\n    var type = getData('characterReferenceType')\n    var value\n\n    if (type) {\n      value = safeFromInt(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n\n      setData('characterReferenceType')\n    } else {\n      value = decode(data)\n    }\n\n    this.stack[this.stack.length - 1].value += value\n  }\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url = this.sliceSerialize(token)\n  }\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url =\n      'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  function blockQuote() {\n    return {type: 'blockquote', children: []}\n  }\n\n  function codeFlow() {\n    return {type: 'code', lang: null, meta: null, value: ''}\n  }\n\n  function codeText() {\n    return {type: 'inlineCode', value: ''}\n  }\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  function emphasis() {\n    return {type: 'emphasis', children: []}\n  }\n\n  function heading() {\n    return {type: 'heading', depth: undefined, children: []}\n  }\n\n  function hardBreak() {\n    return {type: 'break'}\n  }\n\n  function html() {\n    return {type: 'html', value: ''}\n  }\n\n  function image() {\n    return {type: 'image', title: null, url: '', alt: null}\n  }\n\n  function link() {\n    return {type: 'link', title: null, url: '', children: []}\n  }\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  function paragraph() {\n    return {type: 'paragraph', children: []}\n  }\n\n  function strong() {\n    return {type: 'strong', children: []}\n  }\n\n  function text() {\n    return {type: 'text', value: ''}\n  }\n\n  function thematicBreak() {\n    return {type: 'thematicBreak'}\n  }\n}\n\nfunction configure(config, extensions) {\n  var length = extensions.length\n  var index = -1\n\n  while (++index < length) {\n    extension(config, extensions[index])\n  }\n\n  return config\n}\n\nfunction extension(config, extension) {\n  var key\n  var left\n  var right\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : (config[key] = {})\n    right = extension[key]\n\n    if (key === 'canContainEols') {\n      config[key] = [].concat(left, right)\n    } else {\n      Object.assign(left, right)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}