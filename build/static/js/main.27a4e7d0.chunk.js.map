{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Component","value","language","style","docco","App","useState","input","setInput","className","autoFocus","onChange","e","target","source","renderers","code","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAwCA,IAAMA,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE1B,OACE,cAAC,IAAD,CAAmBA,SAAQ,OAAEA,QAAF,IAAEA,IAAY,KAAMC,MAAOC,IAAtD,gBACGH,QADH,IACGA,IAAS,MAIDI,EAzCf,WAAgB,IAAD,EACaC,qBADb,mBACNC,EADM,KACCC,EADD,KAEb,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,MAAf,UACE,cAAC,IAAD,IADF,cAIA,0BACEA,UAAU,WACVR,MAAOM,EACPG,WAAS,EACTC,SAAU,SAACC,GAAD,OAAOJ,EAASI,EAAEC,OAAOZ,aAIvC,sBAAKQ,UAAU,OAAf,UACE,sBAAKA,UAAU,MAAf,UACE,cAAC,IAAD,IADF,aAIA,cAAC,IAAD,CACEK,OAAQP,EACRQ,UAAW,CACTC,KAAMhB,GAERS,UAAU,oBCtBLQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.27a4e7d0.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\n\nfunction App() {\n  const [input, setInput] = useState();\n  return (\n    <div className=\"App\">\n      <div className=\"cont\">\n        <div className=\"nav\">\n          <VisibilityIcon />\n          MARKDOWN\n        </div>\n        <textarea\n          className=\"textarea\"\n          value={input}\n          autoFocus\n          onChange={(e) => setInput(e.target.value)}\n        ></textarea>\n      </div>\n\n      <div className=\"cont\">\n        <div className=\"nav\">\n          <VisibilityIcon />\n          PREIVEW\n        </div>\n        <ReactMarkdown\n          source={input}\n          renderers={{\n            code: Component,\n          }}\n          className=\"markdown\"\n        />\n      </div>\n    </div>\n  );\n}\nconst Component = ({ value, language }) => {\n  const codeString = \"(num) => num + 1\";\n  return (\n    <SyntaxHighlighter language={language ?? null} style={docco}>\n      {value ?? \"\"}\n    </SyntaxHighlighter>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}